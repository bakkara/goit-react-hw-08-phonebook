{"version":3,"file":"static/js/139.257399ce.chunk.js","mappings":"qOAOaA,EAAiBC,EAAAA,KAAaC,MAAM,CAC/CC,KAAMF,EAAAA,KACNG,MAAOH,EAAAA,KAAaI,SAAS,YAC7BC,SAAUL,EAAAA,KAEPM,IAAI,EAAG,gBACPC,IAAI,GAAI,iBACRH,aAGQI,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MASjB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CAAAC,UACRF,EAAAA,EAAAA,KAACG,EAAAA,GAAM,CACLC,cAAe,CACbb,KAAM,GACNC,MAAO,GACPE,SAAU,IAEZW,iBAAkBjB,EAClBkB,SAAU,SAACC,EAAQC,GAAO,OAhBZ,SAACD,EAAQC,GAC3B,IAAQjB,EAA0BgB,EAA1BhB,KAAMC,EAAoBe,EAApBf,MAAOE,EAAaa,EAAbb,SAErBI,GAASW,EAAAA,EAAAA,IAAS,CAAElB,KAAAA,EAAMC,MAAAA,EAAOE,SAAAA,KACjCc,EAAQE,WACV,CAWqCC,CAAaJ,EAAQC,EAAQ,EAACN,UAC/DU,EAAAA,EAAAA,MAACC,EAAAA,GAAU,CAAAX,SAAA,EACTU,EAAAA,EAAAA,MAACE,EAAAA,GAAK,CAAAZ,SAAA,CAAC,YAEPF,EAAAA,EAAAA,KAACe,EAAAA,GAAW,CAACC,KAAK,OAAOzB,KAAK,UAC9BS,EAAAA,EAAAA,KAACiB,EAAAA,GAAQ,CAAC1B,KAAK,OAAO2B,UAAU,YAElCN,EAAAA,EAAAA,MAACE,EAAAA,GAAK,CAAAZ,SAAA,CAAC,SAELF,EAAAA,EAAAA,KAACe,EAAAA,GAAW,CAACC,KAAK,QAAQzB,KAAK,WAC/BS,EAAAA,EAAAA,KAACiB,EAAAA,GAAQ,CAAC1B,KAAK,QAAQ2B,UAAU,YAEnCN,EAAAA,EAAAA,MAACE,EAAAA,GAAK,CAAAZ,SAAA,CAAC,YAELF,EAAAA,EAAAA,KAACe,EAAAA,GAAW,CAACC,KAAK,WAAWzB,KAAK,cAClCS,EAAAA,EAAAA,KAACiB,EAAAA,GAAQ,CAAC1B,KAAK,WAAW2B,UAAU,YAElClB,EAAAA,EAAAA,KAACmB,EAAAA,GAAM,CAACH,KAAK,SAAQd,SAAC,mBAMhC,ECzDe,SAASkB,IACtB,OACEpB,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAACH,EAAY,KAGnB,C","sources":["components/RegisterForm/RegisterForm.js","pages/Register.js"],"sourcesContent":["import { Formik } from \"formik\";\nimport { Container } from 'components/App/App.styled';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport { Button, ErrorMsg, Label, StyledField, StyledForm } from \"components/ContactForm/ContactForm.styled\";\nimport * as Yup from 'yup';\n\nexport const validateSchema = Yup.object().shape({\n  name: Yup.string(),\n  email: Yup.string().required('Required'),\n  password: Yup\n    .string()\n    .min(8, 'Min length 8')\n    .max(64, 'Max length 64')\n    .required(),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n const handleSubmit = (values, actions) => {\n    const { name, email, password } = values;\n\n    dispatch(register({ name, email, password }));\n    actions.resetForm();\n  };\n\n  return (\n    <Container>\n      <Formik\n        initialValues={{\n          name: \"\",\n          email: \"\",\n          password: \"\",\n      }}\n        validationSchema={validateSchema}\n        onSubmit={(values, actions) => handleSubmit(values, actions)}>\n      <StyledForm>\n        <Label>\n        Username\n        <StyledField type=\"text\" name=\"name\" />\n        <ErrorMsg name=\"name\" component=\"div\"/>\n      </Label>\n      <Label>\n        Email\n        <StyledField type=\"email\" name=\"email\" />\n        <ErrorMsg name=\"email\" component=\"div\"/>\n      </Label>\n      <Label>\n        Password\n        <StyledField type=\"password\" name=\"password\" />\n        <ErrorMsg name=\"password\" component=\"div\"/>\n      </Label>\n          <Button type=\"submit\">Register</Button>\n        </StyledForm>\n      </Formik>\n    </Container>\n      );\n    \n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <div>\n      <RegisterForm />\n    </div>\n  );\n}"],"names":["validateSchema","Yup","shape","name","email","required","password","min","max","RegisterForm","dispatch","useDispatch","_jsx","Container","children","Formik","initialValues","validationSchema","onSubmit","values","actions","register","resetForm","handleSubmit","_jsxs","StyledForm","Label","StyledField","type","ErrorMsg","component","Button","Register"],"sourceRoot":""}